<% provide(:title, "RNN") %>
<h1>Recurrent Neural Networks</h1>
<h2>Summary</h2>
<p>
  This project focuses on the performance of recurrent neural networks in the context of image
  generation and text classification. Specifically, multiple recurrent neural networks are trained 
  in order to classify movie reviews from the Internet Movie Database and generate images from the 
  MNIST dataset. Models are evaluated in light of training and test data performance and also via 
  manual verification methods.
</p>
<center>
  <%= image_tag "RNN_Data.png", :size => "800x300" %>
</center>
<h2>Goals</h2>
<ul>
  <li>Analyze the performance of two Recurrent Neural Networks:
    <ul>
      <li>SimpleRNN</li>
      <li>PixelRNN</li>
    </ul>
  </li>
  <li>Train Recurrent Neural Networks to perform different tasks:</li>
  <ul>
    <li>SimpleRNN - Classify movie reviews as either positive or negative.</li>
    <li>PixelRNN - Generate images of handwritten digits.</li>
  </ul>
</ul>
<h2>Takeaways</h2>
<ul>
  <li>LSTM layers useful:
    <ul>
      <li>PixelRNN model learned the conditional probabilities of each pixel through a series of LSTM layers.</li>
      <li>Allowed the model to increase its depth while maintaining a relatively high level of accuracy.</li>
    </ul>
  </li>
  <li>
    RNN model may be too simplistic to be of real use, as it was ultimatley incapable of maintaining and learning 
    long-term dependencies.
    <ul>
      <li>SimpleRNN model achieved a maximum validation accuracy of only 83.6%.</li>
      <li>Estimated 30% of all images generated by PixelRNN are illegible.</li>
    </ul>
  </li>
</ul>
<h2>
  <center>
    <%= image_tag "RNN_Results.png", :size => "500x500" %>
  </center>
</h2>
<center>
  <i>MNIST Image Generation</i>
</center>
<h2>Documents</h2>
<h3>
  <%= link_to image_tag("PDF.png", size: "80x100", alt: "Report"), asset_path("RNN_Report.pdf") %>
  <%= link_to image_tag("GitHub.png", size: "90x100", alt: "GitHub"), 'https://github.com/dweinflash/RNN' %>
</h3>